PROGS=DoNotExecute.oss.test         \
      DoNotExecutef.oss.test        \
      PrimitiveBlk.oss.test         \
      PrimitiveNonBlk.oss.test      \
      PrimitiveWrappers.oss.test    \
      MultiPrimitiveBlk.oss.test    \
      MultiPrimitiveNonBlk.oss.test \
      CollectiveBlk.oss.test        \
      CollectiveNonBlk.oss.test     \
      HugeBlkTasks.oss.test         \
      HugeTasksf.oss.test

# Compilers
CLANGCXX ?= clang++
MF90 ?= mfc
MPICXX ?= mpicxx
MPIF90 ?= mpif90

# MPI Wrappers
CXX_WRAPPERS=I_MPI_CXX=$(CLANGCXX) MPICH_CXX=$(CLANGCXX) OMPI_CXX=$(CLANGCXX)
F90_WRAPPERS=I_MPI_F90=$(MF90) MPICH_FC=$(MF90) OMPI_FC=$(MF90)

CPPFLAGS=-I.
CFLAGS=-fompss-2 -O3 -std=c++11 --gcc-toolchain=$(shell which gcc | sed 's,/bin/gcc$$,,')
FFLAGS=--ompss-2 -O3 --pp

ifdef LARGE_INPUT
CPPFLAGS+=-DLARGE_INPUT
endif

# TAMPI Flags
ifndef TAMPI_INCLUDE_PATH
ifndef TAMPI_HOME
$(error TAMPI_HOME must be defined if TAMPI_INCLUDE_PATH is not)
endif
TAMPI_INCLUDE_PATH=$(TAMPI_HOME)/include
endif

ifndef TAMPI_LIBRARY_PATH
ifndef TAMPI_HOME
$(error TAMPI_HOME must be defined if TAMPI_LIBRARY_PATH is not)
endif
TAMPI_LIBRARY_PATH=$(TAMPI_HOME)/lib
endif

TAMPI_CPPFLAGS=-I$(TAMPI_INCLUDE_PATH)
TAMPI_LDCFLAGS=-L$(TAMPI_LIBRARY_PATH) -ltampi-c
TAMPI_LDFFLAGS=-L$(TAMPI_LIBRARY_PATH) -ltampi-fortran

all: $(PROGS)

%.oss.test: oss/%.cpp
	@echo "  MPICXX $@"
	$(CXX_WRAPPERS) $(MPICXX) $(CPPFLAGS) $(CFLAGS) $(TAMPI_CPPFLAGS) $^ -o $@ $(TAMPI_LDCFLAGS)

%.oss.test: oss/%.F90
	@echo "  MPIF90 $@"
	$(F90_WRAPPERS) $(MPIF90) $(CPPFLAGS) $(FFLAGS) $(TAMPI_CPPFLAGS) $^ -o $@ $(TAMPI_LDFFLAGS)

clean:
	rm -f *.o *.test *.mod
